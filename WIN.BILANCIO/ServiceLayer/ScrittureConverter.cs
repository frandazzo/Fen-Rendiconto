using System;
using System.Collections.Generic;
using System.Text;
using System.ComponentModel;
using System.Collections;
using TestBinding;
using BilancioFenealgest.DomainLayer;
using BilancioFenealgest.ServiceLayer.DTO;
using WIN.BILANCIO.ServiceLayer.DTO;

namespace BilancioFenealgest.ServiceLayer
{
    public class ScrittureConverter
    {

        public static SortableBindingList<ScrittureDTO> ConvertScritture(IList scritture)
        {
            SortableBindingList<ScrittureDTO> s = new SortableBindingList<ScrittureDTO>();

            foreach (Scrittura item in scritture)
            {
                ScrittureDTO dto = ConvertToScritturaDTO(item);
                

                s.Add(dto);
               
            }


          

            return s;



        }

        public static ScrittureDTO ConvertToScritturaDTO(Scrittura item)
        {
            ScrittureDTO dto = new ScrittureDTO();

            dto.AutoGenerated = item.AutoGenerated;
            dto.Causale = item.Causale;
            dto.Date = item.Date.Date;
            dto.Id = item.Id;
            dto.Importo = (decimal)item.Importo;
            dto.NumeroPezza = item.NumeroPezza;
            dto.TipoOperazione = item.TipoOperazione.ToString();
            dto.ParentId = item.ParentId;
            dto.ParentName = item.ParentName;
            dto.Riferimento1 = item.Riferimento1;
            dto.Riferimento2 = item.Riferimento2;
            dto.Riferimento3 = item.Riferimento3;
            dto.Contropartita = item.Contropartita;
            dto.IdContropartita = item.IdContropartita;
            return dto;
        }


     

        public static SortableBindingList<ScritturaPrimaNotaDTO> ConvertScrittureToPrimaNota(IList scritture)
        {
            SortableBindingList<ScritturaPrimaNotaDTO> s = new SortableBindingList<ScritturaPrimaNotaDTO>();

            foreach (Scrittura item in scritture)
            {


                //se la scrittura coinvolge la cassa la tengo in considerazione
                if (item.ParentName == "Cassa" || item.Contropartita == "Cassa")
                {



                    ScritturaPrimaNotaDTO dto = new ScritturaPrimaNotaDTO();


                    dto.Causale = item.Causale;
                    dto.Data = item.Date.Date;
                    dto.Pezza = item.NumeroPezza;
                    dto.Conto = string.Format("{0} ({1})", item.ParentName, item.ParentId);
                    dto.Contropartita = item.Contropartita; //item.TipoOperazione.ToString();
                    dto.ContoContropartita = item.Contropartita;
                    //dto.IdContropartita = item.IdContropartita;
                    //BilancioFenealgest.DomainLayer.Conto.TipoConto ccc = Conto.CalculateTipoConto(item.ParentId);

                    //se il primo conto non è la cassa
                    if (!item.ParentName.Equals("Cassa"))
                    {

                        if (item.ParentId.StartsWith("E")) //se è una entrata
                        {
                            if (item.Importo > 0)
                                dto.Dare = item.Importo;
                            else
                                dto.Avere = item.Importo * -1;
                        }
                        else if (item.ParentId.StartsWith("S")) //se è una uscita
                        {
                            if (item.Importo > 0)
                                dto.Avere = item.Importo;
                            else
                                dto.Dare = item.Importo * -1;
                        }
                        else if (item.ParentId.StartsWith("P")) //se proviene da una passivita =??????? cosa puo' essere????
                        {//la chiusura di un debito
                            if (item.Importo > 0)
                                dto.Dare = item.Importo;
                            else
                                dto.Avere = item.Importo*-1;
                        }
                        else //se proviene da una attività (un giroconto bancario
                        {
                            if (item.Importo > 0)
                                dto.Avere = item.Importo;
                            else
                                dto.Dare = item.Importo * -1;
                        }
                    }
                    else
                    {
                        if (item.IdContropartita.StartsWith("E")) //se è una entrata
                        {
                            if (item.Importo > 0)
                                dto.Dare = item.Importo;
                            else
                                dto.Avere = item.Importo * -1;
                        }
                        else if (item.IdContropartita.StartsWith("S")) //se è una uscita
                        {
                            if (item.Importo > 0)
                                dto.Dare = item.Importo; 
                            else
                                dto.Avere = item.Importo* -1;
                        }
                        else if (item.IdContropartita.StartsWith("P")) //se proviene da una passivita =??????? cosa puo' essere????
                        {
                            if (item.Importo > 0)
                                dto.Dare = item.Importo;
                            else
                                dto.Avere = item.Importo * -1;
                        }
                        else //se proviene da una attività (un giroconto bancario
                        {
                            if (item.Importo > 0)
                                dto.Dare = item.Importo;
                            else
                                 dto.Avere = item.Importo * -1;
                        }
                    }

                    s.Add(dto);

                    //if (ccc == Conto.TipoConto.Entrate)
                    //{
                    //    if (item.TipoOperazione != TipoOperazione.Contropartita)
                    //        dto.Dare = item.Importo;
                    //    else
                    //    {
                    //        dto.Dare = item.Importo;
                    //        dto.Avere = item.Importo;
                    //    }
                    //}
                    //else if (ccc == Conto.TipoConto.Spese)
                    //{
                    //    if (item.TipoOperazione != TipoOperazione.Contropartita)
                    //        dto.Avere = item.Importo;
                    //    else
                    //    {
                    //        dto.Dare = item.Importo;
                    //        dto.Avere = item.Importo;
                    //    }
                    //}
                    //else
                    //{
                    //    dto.Dare = item.Importo;
                    //    dto.Avere = item.Importo;
                    //}


                   

                }

            }

            return s;
        }

        //private static void CalcolaImportoBancario2(Scrittura item, ScritturaPrimaNotaDTO dto)
        //{
        //    if (item.ParentId.StartsWith("S"))
        //    {
        //        dto.AvereCassa = 0;
        //        dto.DareCassa = 0;
        //        dto.AvereBanca1 = 0;
        //        dto.DareBanca1 = 0;
        //        if (item.Importo >= 0)
        //        {
        //            dto.AvereBanca2 = item.Importo;
        //            dto.DareBanca2 = 0;
        //        }
        //        else
        //        {
        //            dto.AvereBanca2 = 0;
        //            dto.DareBanca2 = item.Importo * -1;
        //        }
        //    }
        //    else if (item.ParentId.StartsWith("E"))
        //    {
        //        dto.AvereCassa = 0;
        //        dto.DareCassa = 0;
        //        dto.AvereBanca1 = 0;
        //        dto.DareBanca1 = 0;
        //        if (item.Importo >= 0)
        //        {
        //            dto.AvereBanca2 = 0;
        //            dto.DareBanca2 = item.Importo;
        //        }
        //        else
        //        {
        //            dto.AvereBanca2 = item.Importo * -1;
        //            dto.DareBanca2 = 0;
        //        }
        //    }
        //    else
        //    {
        //        if (item.Importo >= 0)
        //        {
        //            dto.DareCassa = item.Importo;
        //            dto.AvereCassa = 0;
        //            dto.DareBanca2 = 0;
        //            dto.AvereBanca2 = item.Importo;
        //        }
        //        else
        //        {
        //            dto.DareCassa = 0;
        //            dto.AvereCassa = item.Importo * -1;
        //            dto.DareBanca2 = item.Importo * -1;
        //            dto.AvereBanca2 = 0;
        //        }
        //    }
        //}

   

        //private static void CalcolaImportoDiCassa(Scrittura item, ScritturaPrimaNotaDTO dto)
        //{
        //    if (item.ParentId.StartsWith("S"))
        //    {
        //        dto.AvereBanca1 = 0;
        //        dto.DareBanca1 = 0;
        //        if (item.Importo >= 0)
        //        {
        //            dto.AvereCassa = item.Importo;
        //            dto.DareCassa = 0;
        //        }
        //        else
        //        {
        //            dto.AvereCassa = 0;
        //            dto.DareCassa = item.Importo * -1;
        //        }
        //    }
        //    else if (item.ParentId.StartsWith("E"))
        //    {
        //        dto.AvereBanca1 = 0;
        //        dto.DareBanca1 = 0;
        //        if (item.Importo >= 0)
        //        {
        //            dto.AvereCassa = 0;
        //            dto.DareCassa = item.Importo;
        //        }
        //        else
        //        {
        //            dto.AvereCassa = item.Importo * -1;
        //            dto.DareCassa = 0;
        //        }
        //    }
        //    else
        //    {
        //        if (item.Importo >= 0)
        //        {
        //            dto.DareCassa = 0;
        //            dto.AvereCassa = item.Importo;
        //            dto.DareBanca1 = item.Importo;
        //            dto.AvereBanca1 = 0;
        //        }
        //        else
        //        {
        //            dto.DareCassa = item.Importo * -1;
        //            dto.AvereCassa = 0;
        //            dto.DareBanca1 = 0;
        //            dto.AvereBanca1 = item.Importo * -1;
        //        }
        //    }
        //}

        //private static void CalcolaImportoBancario(Scrittura item, ScritturaPrimaNotaDTO dto)
        //{
        //    if (item.ParentId.StartsWith("S"))
        //    {
        //        dto.AvereCassa = 0;
        //        dto.DareCassa = 0;
        //        if (item.Importo >= 0)
        //        {
        //            dto.AvereBanca1 = item.Importo;
        //            dto.DareBanca1 = 0;
        //        }
        //        else
        //        {
        //            dto.AvereBanca1 = 0;
        //            dto.DareBanca1 = item.Importo * -1;
        //        }
        //    }
        //    else if (item.ParentId.StartsWith("E"))
        //    {
        //        dto.AvereCassa = 0;
        //        dto.DareCassa = 0;
        //        if (item.Importo >= 0)
        //        {
        //            dto.AvereBanca1 = 0;
        //            dto.DareBanca1 = item.Importo;
        //        }
        //        else
        //        {
        //            dto.AvereBanca1 = item.Importo * -1;
        //            dto.DareBanca1 = 0;
        //        }
        //    }
        //    else
        //    {
        //        if (item.Importo >= 0)
        //        {
        //            dto.DareCassa = item.Importo;
        //            dto.AvereCassa = 0;
        //            dto.DareBanca1 = 0;
        //            dto.AvereBanca1 = item.Importo;
        //        }
        //        else
        //        {
        //            dto.DareCassa =0;
        //            dto.AvereCassa = item.Importo * -1;
        //            dto.DareBanca1 = item.Importo * -1;
        //            dto.AvereBanca1 = 0;
        //        }
        //    }
        //}


    }
}
